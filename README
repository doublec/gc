I forked this project from "doublec" and added some functions.
Original readme below.
---------------------------------------------------------------

C++ Garbage Collection Library
==============================

This is a library to manage memory in C++ programs using a garbage
collector. It uses a mark and sweep algorithm.

All objects that are to be managed by the collector should be derived
from GCObject:

  class Test : public GCObject {
    ...
  };

If the object maintains references to other GC managed objects it
should override 'markChildren' to call 'mark' on those objects:

  class Test2 : public GCObject {
    private:
      Test* mTest;

    public:
      virtual void markChildren() {
        mTest->mark();
      }
    ...
  };

Periodic calls to GarbageCollector::GC.collect() should be made to
delete unreferenced objects and free memory. This call will call
'mark' on all the root objects, ensuring that they and their children
are not deleted, and and remaining objects are destroyed.

To add an object as a root, call GarbageCollector::GC.addRoot().

License
=======
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice,
   this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
DEVELOPERS AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Feedback
========
I host this on githib:
  http://github.com/doublec/gc

Feel free to clone, hack away, suggest patches, etc. I can be reached
via email: chris.double@double.co.nz
